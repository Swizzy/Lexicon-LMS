@model LexiconLMS.Models.StudentAssignmentsViewModel

<h2>Assignments</h2>
<table class="table sortable">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(m => Model.Assignments.FirstOrDefault().Name)</th>
            <th>@Html.DisplayNameFor(m => Model.Assignments.FirstOrDefault().ModuleName)</th>
            <th data-defaultsort="asc">@Html.DisplayNameFor(m => Model.Assignments.FirstOrDefault().DueDate)</th>
            <th>@Html.DisplayNameFor(m => Model.Assignments.FirstOrDefault().CreateDate)</th>
            <th>@Html.DisplayNameFor(m => Model.Assignments.FirstOrDefault().Status)</th>
            <th data-defaultsort="disabled"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Assignments)
        {
            <tr>
                <td>@Html.ActionLink(item.Name, "Details", "Activities", new { Id = item.ActivityId }, null)</td>
                <td>@Html.ActionLink(item.ModuleName, "Details", "Modules", new { Id = item.ModuleId }, null)</td>
                <td>@Html.DisplayFor(m => item.DueDate)</td>
                <td>@Html.DisplayFor(m => item.CreateDate)</td>
                <td>@Html.DisplayFor(m => item.Status)</td>
                <td>
                    @if (item.HasDocument)
                {
                    if (item.IsUpdateOk)
                    {
                            @Html.ActionLink("Update", "UpdateAssignment", "Documents", new { Id = item.DocumentId }, null)<span> | </span>
                        }
                        @Html.ActionLink("Download", "Download", "Documents", new { Id = item.DocumentId }, new { target = "_blank" })

                    }
                    else if (item.IsUploadOk && !item.HasDocument)
                    {
                        @Html.ActionLink("Upload", "UploadAssignment", "Documents", new { activityId = item.ActivityId }, null)
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
