@model LexiconLMS.Models.ActivityCreateViewModel

<h2>Add Activity</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(excludePropertyErrors: true, message: "", htmlAttributes: new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityTypeId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("ActivityTypeId", selectList: null, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ActivityTypeId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control text-box single-line date" data-val="true" data-val-required="The Start Date field is required." id="StartDate" name="StartDate" type="text" />
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control text-box single-line date" data-val="true" data-val-genericcompare="End Date cannot be before the Start Date" data-val-genericcompare-comparetopropertyname="StartDate" data-val-genericcompare-operatorname="GreaterThan" data-val-required="The End Date field is required." id="EndDate" name="EndDate" type="text" />
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new {Model.ModuleId}, htmlAttributes: null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
    <script type="text/javascript" src="~/Scripts/moment-with-locales.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <link rel="stylesheet" href="~/Content/bootstrap-datetimepicker.css"/>
    <script type="text/javascript">
        $(function() {
            $('#StartDate').datetimepicker({
                @{
                    var startDate = "";
                    if (Model.StartDate != null)
                    {
                        startDate = $"defaultDate: \"{Model.StartDate:yyyy-MM-dd HH:mm}\",";
                    }
                }
                @Html.Raw(startDate)
                locale: "sv",
                daysOfWeekDisabled: [0, 6],
                sideBySide: true,
                format: "YYYY-MM-DD HH:mm",
                minDate: "2000-01-01",
                calendarWeeks: true
            });
            $('#EndDate').datetimepicker({
                @{
                    var endDate = "";
                    if (Model.EndDate != null)
                    {
                        endDate = $"defaultDate: \"{Model.EndDate:yyyy-MM-dd HH:mm}\",";
                    }
                }
                @Html.Raw(endDate)
                locale: "sv",
                daysOfWeekDisabled: [0, 6],
                sideBySide: true,
                format: "YYYY-MM-DD HH:mm",
                minDate: "2000-01-01",
                calendarWeeks: true
            });
        });
    </script>
}